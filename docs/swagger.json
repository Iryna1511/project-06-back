{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Water Tracker API docs",
    "description": "This is a documentation of Water Tracker app.\n\nThis project is free web-application for comfortable record keeping of drunk water.\n\nThe main goal is to provide users with instruments for control and visualization of water consumption.\n\nThere are possibilities of registration, authentication and authorization of users. They can calculate daily water volume depending on their gender, body weight and sport activities, add/edit/delete time and amount of water they drank. As well, there are list of records for today and month statistic of reaching daily volume goal.\n\nIt is easy and convenient to use app with an intuitive interface, secured by hashing passwords and using access tokens."
  },
  "servers": [
    {
      "url": "https://water-tracker-06.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "Operations with user."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    },
    {
      "name": "Water",
      "description": "Operations with water."
    }
  ],
  "paths": {
    "/user": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get info about user",
        "operationId": "getUser",
        "description": "Get whole available information about user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get information about user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found user with id 66d2e3a18c42147b871bcdcc!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Add/update user's info",
        "operationId": "patchUser",
        "description": "Update/add one or more fields about user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/patchUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update's information about user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "User successfully patched!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          }
        }
      }
    },
    "/user/avatar": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Add/update user's avatar",
        "operationId": "patchUserAvatar",
        "description": "Add/update user's avatar by returning a link to avatar on Cloudinary",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "avatar"
                ],
                "properties": {
                  "avatar": {
                    "description": "User's desired avatar",
                    "type": "string",
                    "format": "binary",
                    "default": null
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Return user's data with added/updated avatar",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Avatar added successfully"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/user/waterRate": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update daily water goal",
        "operationId": "patchWaterRate",
        "description": "Update daily water goal in ml, can be from 1 to 15000",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "waterRate"
                ],
                "properties": {
                  "waterRate": {
                    "description": "User's daily water goal in ml, can be from 1 to 15000",
                    "type": "number",
                    "example": 2100,
                    "default": 1500
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update's information about daily water goal, returns whole user`s data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "User successfully patched!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register a new user",
        "operationId": "register",
        "description": "Register a new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/auth"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully registered a user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered a user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "409": {
            "$ref": "#/components/responses/409"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login a user",
        "operationId": "login",
        "description": "Login a user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/auth"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully logged in an user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in an user!"
                    },
                    "data": {
                      "type": "object",
                      "example": {
                        "accessToken": "eyJhbGcidsadfadsfasdfadfad"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh the access token",
        "operationId": "refreshSession",
        "description": "Refresh the access token by providing the refresh token",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully refreshed a session!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed a session!"
                    },
                    "data": {
                      "type": "object",
                      "example": {
                        "accessToken": "eyJhbGcidsadfadsfasdfadfad"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout",
        "operationId": "logout",
        "description": "Logout a user from the system",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully logged out"
          }
        }
      }
    },
    "/water": {
      "post": {
        "tags": [
          "Water"
        ],
        "summary": "Add water consumption entry",
        "operationId": "addWater",
        "description": "Add water consumption in ml",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "date",
                  "waterVolume"
                ],
                "$ref": "#/components/schemas/waterConsumption"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully added entry",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully added water consumption!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/waterConsumptionRes"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/water/{id}": {
      "patch": {
        "tags": [
          "Water"
        ],
        "summary": "Update water consumption entry",
        "operationId": "updateWater",
        "description": "Update water consumption in ml",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "66a13c99ce0ac5be8ada09b0"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/waterConsumption"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated entry",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated water consumption!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/waterConsumptionRes"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "delete": {
        "tags": [
          "Water"
        ],
        "summary": "Delete water consumption entry",
        "operationId": "deleteWater",
        "description": "Delete water consumption entry",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "66a13c99ce0ac5be8ada09b0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted entry",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted water consumption entry!"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/water/day": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get water consumption by day",
        "operationId": "getWaterByDay",
        "description": "Get list of water entries for chosen date and water consumption percentage",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "day",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2024-09-12",
              "description": "date must be passed in the format of YYYY-MM-DD"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully get water consumption by day",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully fetched water consumption for 2024-09-12!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/waterByDayRes"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/water/month": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get water consumption for the month",
        "operationId": "getWaterPerMonth",
        "description": "Get list of water consumption by days for chosen month",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "month",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2024-09",
              "description": "Month must be passed in the format of YYYY-MM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully get water consumption for the month",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully fetched water consumption for the month!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/waterPerMonthRes"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "required": [
          "_id",
          "email",
          "gender",
          "waterRate"
        ],
        "properties": {
          "_id": {
            "description": "User's id",
            "type": "string",
            "example": "66d2e3a18c42147b871bcdcc"
          },
          "name": {
            "description": "User's name, can contain max 32 characters",
            "type": "string",
            "example": "Lora",
            "default": null
          },
          "email": {
            "description": "User's email, must be a valid email",
            "type": "string",
            "example": "lora@gmail.com"
          },
          "gender": {
            "description": "User's gender, must be one of [\"male\", \"female\"]",
            "type": "string",
            "enum": [
              "male",
              "female"
            ],
            "example": "male",
            "default": "female"
          },
          "waterRate": {
            "description": "User's daily water goal in ml, can be from 1 to 15000",
            "type": "number",
            "example": 2100,
            "default": 1500
          },
          "avatar": {
            "description": "URL to user's avatar",
            "type": "string",
            "default": null,
            "example": "https://res.cloudinary.com/doicwbvic/image/upload/v1725634437/gvsagq1bnykokhtrtqr4.jpg"
          }
        }
      },
      "patchUser": {
        "type": "object",
        "properties": {
          "name": {
            "description": "User's name, can contain max 32 characters",
            "type": "string",
            "example": "Lora"
          },
          "email": {
            "description": "User's email, must be a valid email",
            "type": "string",
            "example": "lora@gmail.com"
          },
          "gender": {
            "description": "User's gender",
            "type": "string",
            "enum": [
              "male",
              "female"
            ],
            "example": "male",
            "default": "female"
          },
          "password": {
            "description": "User's outdated password, can be min 8 max 64 characters",
            "type": "string",
            "example": "123456789"
          },
          "newPassword": {
            "description": "User's new password, can be min 8 max 64 characters",
            "type": "string",
            "example": "987654321"
          }
        }
      },
      "auth": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "description": "User's email, must be a valid email",
            "type": "string",
            "example": "lora@gmail.com"
          },
          "password": {
            "description": "User's outdated password, can be min 8 max 64 characters",
            "type": "string",
            "example": "mySuperPassword(*_*)"
          }
        }
      },
      "waterConsumption": {
        "properties": {
          "date": {
            "description": "Time when user adds entry, must be in the format YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
            "example": "2024-09-11T19:30:00Z"
          },
          "waterVolume": {
            "description": "Amount of water user want to enter in ml, can be from 50 to 5000",
            "type": "number",
            "example": 250
          }
        }
      },
      "waterConsumptionRes": {
        "type": "object",
        "required": [
          "user_id",
          "date",
          "waterVolume",
          "_id"
        ],
        "properties": {
          "user_id": {
            "description": "User's id",
            "type": "string",
            "example": "66d2feae53a7fad4a2a40500"
          },
          "date": {
            "description": "Time when user added entry in the format YYYY-MM-DDTHH:MM:SS.sssZ",
            "type": "string",
            "example": "2024-09-11T12:13:12.000Z"
          },
          "waterVolume": {
            "description": "Amount of water user want to enter in ml, can be from 50 to 5000",
            "type": "number",
            "example": 250
          },
          "_id": {
            "description": "Entry's id",
            "type": "string",
            "example": "66dd5d27f01cf7c6680d9215"
          }
        }
      },
      "waterByDayRes": {
        "type": "object",
        "required": [
          "waterConsumptionPercentage",
          "waterEntries"
        ],
        "properties": {
          "waterConsumptionPercentage": {
            "description": "Ratio of water consumed to daily goal in %",
            "type": "integer",
            "example": 300
          },
          "waterEntries": {
            "description": "List of water entries for chosen date",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/waterConsumptionRes"
            }
          }
        }
      },
      "waterPerMonthRes": {
        "type": "object",
        "additionalProperties": {
          "type": "object",
          "description": "Object with data for date of the month, which is key name",
          "required": [
            "date",
            "dateNorm",
            "waterConsumptionPercentage",
            "waterConsumptionCount"
          ],
          "properties": {
            "date": {
              "description": "date,month",
              "type": "string",
              "example": "10, September"
            },
            "dateNorm": {
              "description": "Daily water goal in L",
              "type": "number",
              "example": 1.5
            },
            "waterConsumptionPercentage": {
              "description": "Ratio of water consumed to daily goal in %",
              "type": "integer",
              "example": 300
            },
            "waterConsumptionCount": {
              "description": "Number of water consumptions on date,month",
              "type": "integer",
              "example": 9
            }
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "BadRequestError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Name must be a string",
                        "Avatar was not received",
                        "Data was not received",
                        "Date should be in the format YYYY-MM-DDTHH:MM:SSZ"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Access token expired",
                        "Unauthorized",
                        "Session expired",
                        "Session not found",
                        "Incorrect email or password",
                        "Wrong password",
                        "Auth header should be of type Bearer"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "NotFoundError",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "NotFoundError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "User not found",
                        "Route not found",
                        "Water consumption entry not found!"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Conflict",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "ConflictError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email in use"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}